apiVersion: v1
kind: Service
metadata:
  name: jellyfin-service
spec:
  clusterIP: {{ .Values.jellyfin.clusterIP }}
  ports:
    - name: http
      port: {{ .Values.jellyfin.ports.http.cluster }}
      protocol: TCP
      targetPort: {{ .Values.jellyfin.ports.http.cluster }}
    - name: https
      port: {{ .Values.jellyfin.ports.https.cluster }}
      protocol: TCP
      targetPort: {{ .Values.jellyfin.ports.https.cluster }}
    - name: standard-auto-discovery
      port: {{ .Values.jellyfin.ports.autoDiscovery.standard.cluster }}
      protocol: UDP
      targetPort: {{ .Values.jellyfin.ports.autoDiscovery.standard.cluster }}
    - name: service-auto-discovery
      port: {{ .Values.jellyfin.ports.autoDiscovery.service.cluster }}
      protocol: UDP
      targetPort: {{ .Values.jellyfin.ports.autoDiscovery.service.cluster }}
  selector:
    app: jellyfin
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-node-port
spec:
  selector:
    app: jellyfin
  ports:
    - protocol: TCP
      name: http
      port: {{ .Values.jellyfin.ports.http.cluster }}
      targetPort: {{ .Values.jellyfin.ports.http.cluster }}
      nodePort: {{ .Values.jellyfin.ports.http.node }}
    - protocol: TCP
      name: https
      port: {{ .Values.jellyfin.ports.https.cluster }}
      targetPort: {{ .Values.jellyfin.ports.https.cluster }}
      nodePort: {{ .Values.jellyfin.ports.https.node }}
    - protocol: UDP
      name: standard-auto-discovery
      port: {{ .Values.jellyfin.ports.autoDiscovery.standard.cluster }}
      targetPort: {{ .Values.jellyfin.ports.autoDiscovery.standard.cluster }}
      nodePort: {{ .Values.jellyfin.ports.autoDiscovery.standard.node }}
    - name: service-auto-discovery
      protocol: UDP
      port: {{ .Values.jellyfin.ports.autoDiscovery.service.cluster }}
      targetPort: {{ .Values.jellyfin.ports.autoDiscovery.service.cluster }}
      nodePort: {{ .Values.jellyfin.ports.autoDiscovery.service.node }}
  type: NodePort
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config
        - name: media
          persistentVolumeClaim:
            claimName: media
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
      containers:
      - env:
        - name: TZ
          value: {{ .Values.Timezone }}
        - name: PUID
          value: "{{ .Values.PUID }}"
        - name: PGID
          value: "{{ .Values.PGID }}"
        image: {{ include "image" .Values.jellyfin.image }}
        imagePullPolicy: {{ .Values.jellyfin.image.pullPolicy }}
        resources:
          limits:
            nvidia.com/gpu: 1
        name: jellyfin
        ports:
          - containerPort: {{ .Values.jellyfin.ports.http.cluster }}
        volumeMounts:
          - name: config
            mountPath: /config
            subPath: jellyfin
          - name: media
            mountPath: /movies
            subPath: movies
          - name: media
            mountPath: /tv
            subPath: tv
        startupProbe:
          tcpSocket:
            port: {{ .Values.jellyfin.ports.http.cluster }}
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 20
        livenessProbe:
          httpGet:
            path: /jellyfin/health
            port: {{ .Values.jellyfin.ports.http.cluster }}
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /jellyfin/health
            port: {{ .Values.jellyfin.ports.http.cluster }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 1