apiVersion: v1
kind: Service
metadata:
  name: jellyfin-tcp-service
spec:
  ports:
    - name: http
      port: 8096
      protocol: TCP
    - name: https
      port: 8920
      protocol: TCP
  selector:
    app: jellyfin
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-udp-service
spec:
  ports:
    - name: auto-discovery-1
      port: 7359
      protocol: UDP
    - name: auto-discovery-2
      port: 1900
      protocol: UDP
  selector:
    app: jellyfin
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      volumes:
        - name: jellyfin-config
          persistentVolumeClaim:
            claimName: jellyfin-config-claim
      dnsPolicy: ClusterFirst
      containers:
      - env:
        - name: TZ
          value: {{ .Values.Timezone }}
        - name: PUID
          value: '1000'
        - name: PGID
          value: '1000'
        image: linuxserver/jellyfin:{{ .Values.jellyfin.version }}
        name: jellyfin
        ports:
          - containerPort: 8096
        volumeMounts:
          - mountPath: /config
            name: jellyfin-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config-claim
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      name: jellyfin-config
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-config
  labels:
    type: local
    name: jellyfin-config
spec:
  storageClassName: standard
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /run/desktop/mnt/host/c/home-media-server/jellyfin/config
    type: DirectoryOrCreate